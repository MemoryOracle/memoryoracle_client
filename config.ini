[global]

   configuration_version = -1
   software_title = memoryoracle
   bin = /usr/bin
   configuration_global = ${global:etc}/${global:software_title}
   configuration_local = ${global:home}/.config/${global:software_title}
   etc = /etc
   home = /home/dnoland
   lib = /usr/lib
   log = /var/log/${global:software_title}
   tmp = /tmp
   run = /run
   encoding = UTF-8

[executable] 

   browser = ${global:bin}/google-chrome-beta
   terminal = ${global:bin}/terminator

[gdb]

   # point to where the gdb exe lives
   executable = ${global:bin}/gdb
   # start at main or just stay where valgrind puts us
   initial_warp = true
   # automatically import the memoryoracle module
   auto_import = true
   # automatically watch memory
   auto_watch_memory = true

[valgrind]
   
   # point to where the valgrind binary lives
   executable = ${global:bin}/valgrind
   # verbosity (number of times --verbose will be used in valgrind call)
   option verbose = 1
   # be quiet?
   option quiet = false
   # trace into children 
   # (WARNING: don't change this, it won't help ya)
   option trace-children = no
   # should the child process be silent after forking 
   # (WARNING: memoryoracle can't deal with fork, so don't mess with this)
   option child-silent-after-fork = yes
   # vgdb enabled
   # (NOTE: memoryoracle requires vgdb, so the only options are yes and full)
   option vgdb = full
   option vgdb-error = 0
   option vgdb-stop-at = all
   option track-fds = yes
   option time-stamp = yes
   text_output_file_prefix = |BIN|_|ARGS|_|TIME|_
   text_output_file_suffix = log
   option xml = yes
   xml_output_file_prefix = |BIN|_|ARGS|_|TIME|_
   xml_output_file_suffix = xml 
   option demangle = yes
   option num-callers = 500
   option error-limit = yes
   option error-exitcode = 0
   option sigill-diagnostics = yes
   option show-below-main = no
   option full-path-after = .
   option extra-debug-info-path = |UNDEF|
   option debuginfo-server = |UNDEF|
   option allow-mismatched-debuginfo = no
